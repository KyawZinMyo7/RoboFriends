{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","Scroll","props","style","overflowY","border","height","children","SearchBox","searchChange","type","placeholder","onChange","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","OnSearchChange","event","setState","searchfield","target","value","state","inherits","createClass","_this2","fetch","then","response","json","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.91f99c2e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, email, id }) =>{\n    return(\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt=\"robot\" src={`https://robohash.org/${ id }?200x200`}></img>\n            <div>\n                <h1>{ name }</h1>\n                <p>{ email }</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({robots}) =>{\n    return (\n        <div>\n        {\n            robots.map((user, i) =>{\n                return <Card \n                    key={i} \n                    id={robots[i].id} \n                    name={robots[i].name} \n                    email={robots[i].email} \n                />\n            })\n        }\n        </div>\n    );\n}\n\nexport default CardList;","import React  from \"react\";\n\n\nconst Scroll = (props) =>{\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px' }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) =>{\n    return(\n        <div className=\"pa2\">\n            <input \n            className=\"pa3 ba b--green bg-lightest-blue\"\n            type=\"text\" \n            placeholder=\"Search Robots\" \n            onChange={ searchChange }\n            />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport Scroll from \"../components/Scroll\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\"\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: \"\"\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response =>  response.json())\n            .then(user => this.setState ({ robots : user }))\n    }\n\n    OnSearchChange = (event) => {\n        this.setState ({ searchfield: event.target.value })\n    }\n\n    render () {\n        const { robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length ? \n             <h1 className=\"tc\">Loading</h1> : \n             (\n                <div className=\"tc\">\n                    <h1 className=\"f1\" id=\"h1\" >Robofriends</h1>\n                    <SearchBox searchChange ={ this.OnSearchChange }/>\n                    <Scroll>\n                        <CardList robots ={filteredRobots}/>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from \"./containers/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}